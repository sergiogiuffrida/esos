#! /bin/sh

source /etc/rc.d/common

MDADM="/sbin/mdadm"
DFLT_OPTS="--assemble --scan"

check_args ${@}

SCRIPT="$(/usr/bin/basename ${0})"
if check_opts_set ${SCRIPT}; then
    USER_OPTS="$(get_rc_opts ${SCRIPT})"
    if [ ${?} -ne 0 ]; then
        /bin/echo ${USER_OPTS}
        exit 1
    fi
else
    USER_OPTS="${DFLT_OPTS}"
fi

start() {
    /bin/echo "Assembling software RAID devices..."
    eval ${MDADM} ${USER_OPTS} || exit 1
}

stop() {
    /bin/echo "Stopping MD RAID arrays..."
    # We do two runs to handle "nested" MD RAID arrays
    for i in 1 2; do
        ${MDADM} --detail --scan | while read -r row; do
            md_path="$(echo "${row}" | awk '{ print $2 }')"
            md_name="$(echo "${row}" | awk '{ print $4 }' | \
                cut -d= -f2 | cut -d: -f2)"
            # We can't stop nested MD RAID arrays that have member arrays
            md_device="$(readlink -f "${md_path}")"
            short_md="$(echo "${md_device}" | cut -d/ -f3)"
            if find "/sys/block/${short_md}/holders/" \
                -type l -name 'md*' | grep -q .; then
                continue
            fi
            # Only stop arrays that aren't the ESOS boot media
            if ! echo "${md_name}" | \
                grep -E 'esos_boot|esos_root|esos_conf|esos_logs|esos_data' \
                > /dev/null; then
                ${MDADM} --stop "${md_path}" || exit 1
            fi
        done
    done
}

status() {
    # We don't know anything
    exit "${UNKNOWN}"
}

# Perform specified action
${1}
